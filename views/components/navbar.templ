package components

import "github.com/keyruu/traversetown-htmx/utils"
import "strings"

func isPath(ctx context.Context, path string) bool {
	return strings.HasPrefix(ctx.Value(utils.PathContextKey).(string), path)
}

templ Sidebar() {
	<div id="sidebar-content" class="transition duration-500 ease-in fixed top-0 right-0 h-full w-64 bg-[#1f1f1f] border-r border-[#333] flex z-[100]">
		<div class="flex-1 p-10 text-2xl flex justify-center flex-col">
			<span
				class="mb-6 absolute top-2 right-2 iconify mdi--close"
				hx-delete="data:text/html,"
				hx-target="#sidebar-content"
				hx-swap="outerHTML swap:1s"
			></span>
			@NavLink("/", "home", "left", "right", "mb-6")
			@NavLink("/likes", "likes", "left", "right", "mb-6")
			@NavLink("/music", "music", "left", "right", "mb-6")
			@NavLink("/listens", "listens", "left", "right", "mb-6")
			@NavLink("/about", "about", "left", "right", "")
		</div>
	</div>
}

templ Navbar() {
	<style>
    @scope (#sidebar) {
      #sidebar-content.htmx-added {
        transform: translateX(100%);
      }

      #sidebar-content.htmx-swapping {
        transform: translateX(100%);
      }

      #sidebar-content {
        transform: translateX(0);
      }
    }
  </style>
	<div id="sidebar"></div>
	<nav id="navbar" class="bg-[#121212] z-50 fixed w-screen h-24 flex justify-center">
		<div class="grid grid-cols-3 lg:grid-cols-5 grid-rows-1 gap-1 w-full">
			<div class="lg:hidden"></div>
			@NavLink("/likes", "likes", "left", "right", "hidden lg:flex")
			@NavLink("/music", "music", "left", "right", "hidden lg:flex")
			<div href="/" class="flex justify-center items-center text-2xl font-semibold">
				<a
					href="/"
					class="hover:scale-110 transition duration-500 hover:bg-gradient-to-r hover:from-sky-400 hover:to-blue-700 
          bg-clip-text text-transparent bg-white"
				>Keyruu</a>
			</div>
			@NavLink("/listens", "listens", "right", "left", "hidden lg:flex")
			@NavLink("/about", "about", "right", "left", "hidden lg:flex")
			<div class="flex justify-center items-center lg:hidden">
				<span class="h-8 w-8 iconify mdi--menu" hx-get="/sidebar" hx-target="#sidebar"></span>
			</div>
		</div>
	</nav>
	<style>
    @scope (nav) {
      /* Underline From Left */
      .hvr-underline-from-left {
        display: inline-block;
        vertical-align: middle;
        -webkit-transform: perspective(1px) translateZ(0);
        transform: perspective(1px) translateZ(0);
        box-shadow: 0 0 1px rgba(0, 0, 0, 0);
        position: relative;
        overflow: hidden;
      }
      .hvr-underline-from-left:before {
        content: "";
        position: absolute;
        z-index: -1;
        left: 0;
        bottom: 0;
        background: #4ca7f0;
        height: 4px;
        -webkit-transition-property: right;
        transition-property: right;
        -webkit-transition-duration: 0.3s;
        transition-duration: 0.3s;
        -webkit-transition-timing-function: ease-out;
        transition-timing-function: ease-out;
      }
      .hvr-underline-from-left:hover:before, .hvr-underline-from-left:focus:before, .hvr-underline-from-left:active:before {
        right: 0;
      }

      /* Underline From Right */
      .hvr-underline-from-right {
        display: inline-block;
        vertical-align: middle;
        -webkit-transform: perspective(1px) translateZ(0);
        transform: perspective(1px) translateZ(0);
        box-shadow: 0 0 1px rgba(0, 0, 0, 0);
        position: relative;
        overflow: hidden;
      }
      .hvr-underline-from-right:before {
        content: "";
        position: absolute;
        z-index: -1;
        right: 0;

        bottom: 0;
        background: #4ca7f0;
        height: 4px;
        -webkit-transition-property: left;
        transition-property: left;
        -webkit-transition-duration: 0.3s;
        transition-duration: 0.3s;
        -webkit-transition-timing-function: ease-out;
        transition-timing-function: ease-out;
      }
      .hvr-underline-from-right:hover:before, .hvr-underline-from-right:focus:before, .hvr-underline-from-right:active:before {
        left: 0;
      }
    }
  </style>
}

templ NavLink(to, text, direction, opposite, extra string) {
	<div class={ "flex justify-center items-center", extra }>
		<a
			href={ templ.SafeURL(to) }
			class={ "cursor-pointer",
        "hvr-underline-from-" + direction,
        templ.KV("before:" + opposite + "-full", !isPath(ctx, to)),
        templ.KV("before:" + opposite + "-0", isPath(ctx, to)) }
		>
			{ text }
		</a>
	</div>
}
